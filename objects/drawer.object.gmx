<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lighting_angle = 315;
global.objectSurface = surface_create(view_wview[0],view_hview[0]);
global.tObjectSurface = surface_create(view_wview[0],view_hview[0]);
global.shadowSurface = surface_create(view_wview[0],view_hview[0]);

//Get 'uniform's for 'shd_outline'
u_ht = shader_get_uniform(shd_outline, "pixelH"); 
u_width = shader_get_uniform(shd_outline, "pixelW");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(global.objectSurface);
surface_free(global.shadowSurface);
surface_free(global.tObjectSurface);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(global.shadowSurface){
    surface_set_target(global.shadowSurface);
    draw_clear_alpha(c_white,0);
    surface_reset_target();
}
if surface_exists(global.tObjectSurface){
    surface_set_target(global.tObjectSurface);
    draw_clear_alpha(c_white,0);
    surface_reset_target();
}
if surface_exists(global.objectSurface){
    surface_set_target(global.objectSurface);
    draw_clear_alpha(c_black,0);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(global.shadowSurface)
    draw_surface_ext(global.shadowSurface,0,0,1,1,0,c_white,0.5); // draw shadows slightly transparent
if surface_exists(global.shadowSurface)
    draw_surface_ext(global.tObjectSurface,0,0,1,1,0,c_white,0.5); // draw transparent objects
if surface_exists(global.objectSurface) {
    shader_set(shd_outline); 
    shader_set_uniform_f(u_ht, 1/surface_get_height(global.objectSurface)); 
    shader_set_uniform_f(u_width, 1/surface_get_width(global.objectSurface));
    draw_surface_ext(global.objectSurface,0,0,1,1,0,c_white,1); // draw objects
    shader_reset();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
