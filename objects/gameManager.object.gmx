<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>saveFile = 0;
pokedata = loadPokeData();
buildingdata = loadBuildingData();
loopTable = createLoopTable();
currentSong = -1;
buildingMenuActive = false;
timer_offset=0;
state = -1;
gp_cursorx = window_get_width()/2;
gp_cursory = window_get_height()/2;

selection = noone;

// why am i like this
constructionTimeAgain = false; // THE LANDSCAPE IS CHANGING THE LANDSCAPE IS CRYING

buildMode = false;

// ui elements

time = 0;

// game settings file
if !file_exists(working_directory + "settings.dat") { 
    initSettings(); 
} else { 
    settings = ds_map_secure_load(working_directory + "settings.dat");
}

// check for updates
// edit GAMEVERSION on new releases
if os_is_network_connected() get = http_get("https://pastebin.com/raw/tWQGPhkK")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if saveFile == 0 {
    //saveFile = loadSave("toby.pktsav");
    
    //room_goto(rm_game);
//}

if currentSong != -1 {
    if ds_map_exists(loopTable, audio_get_name(currentSong)) {
        var songLoops = loopTable[? audio_get_name(currentSong)];
        var currentPosition = audio_sound_get_track_position(currentSong)
        if currentPosition &gt;= songLoops[| 0] + songLoops[| 1] {
            audio_sound_set_track_position(currentSong, currentPosition - songLoops[| 1]);
        }
    }
}

if room == rm_game {
    // move gamepad cursor
    gp_cursorx+=gamepad_axis_value(0,gp_axisrh)*4;
    gp_cursory+=gamepad_axis_value(0,gp_axisrv)*4;
   
    // selection (mouse) 
    if mouse_check_button_pressed(mb_left) &amp;&amp; !buildMode &amp;&amp; !obj_ui_game.paused {
        selection = get_instance_mouse_over(obj_building);
        if selection == noone selection = get_instance_mouse_over(obj_trainer);
    }
    
    // selection (gamepad)
    if gamepad_button_check_pressed(0,gp_shoulderrb) &amp;&amp; !buildMode &amp;&amp; !obj_ui_game.paused {
        selection = get_instance_gpcursor_over(obj_building);
        if selection == noone selection = get_instance_gpcursor_over(obj_trainer);
    }
    
    // enter build mode
    if state == gamestate_build {
        if (keyboard_check_pressed(ord("B")) || gamepad_button_check_pressed(0,gp_face4)) &amp;&amp; !obj_ui_game.paused &amp;&amp; !buildingMenuActive {
            if !buildMode {
                buildMode = true;
                constructionTimeAgain = true;
            } else {
                buildMode = false;
                constructionTimeAgain = false;
                obj_ui_game.buildingbuilding = 0;
                obj_camera.move_speed = 2;
            }
        }
    }
    
    // music management
    if saveFile[? "gamemode"] == gamemode_survival {
        time = (gameManager.saveFile[? "playtime"] + get_timer() - gameManager.timer_offset)/60000000
        if time % 20 &lt; 10 &amp;&amp; !audio_is_playing(currentSong) &amp;&amp; irandom(500) == 789 {
            playBGM(asset_get_index("mus_village_"+string(irandom(2)+1)),false);
        } else if time % 20 &lt; 11.5 {
            playBGM(mus_night);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_find_value(async_load, "id") == get {
    if ds_map_find_value(async_load, "status") == 0 {
        ini_open_from_string(ds_map_find_value(async_load, "result"));
        if ini_read_real("update","latestversion",-1) &gt; GAMEVERSION {
            var file = file_text_open_write(working_directory + "\update.tmp");
            file_text_write_string(file,ini_read_string("update","download",""));
            file_text_close(file);
            room_goto(rm_update);
        } else {
            room_goto(rm_titleScreen);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy(saveFile);
ds_map_destroy(loopTable);
ds_map_destroy(buildingdata);
ds_map_destroy(pokedata);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
